%{
#include <stdio.h>
#include <stdlib.h>

int COMMENT = 0;
%}

identifier [a-zA-Z][a-zA-Z0-9]*

%%

#.*                                 { printf("\n%s is a PREPROCESSOR DIRECTIVE", yytext); }

int|float|char|double|while|for|
struct|typedef|do|if|break|continue|
void|switch|return|else|goto       { printf("\n\t%s is a KEYWORD", yytext); }

"/*"                               { COMMENT = 1; printf("\n\t%s is a COMMENT START", yytext); }
"*/"                               { COMMENT = 0; printf("\n\t%s is a COMMENT END", yytext); }

{identifier}\(                     { if(!COMMENT) printf("\nFUNCTION \n\t%s", yytext); }

\{                                 { if(!COMMENT) printf("\nBLOCK BEGINS"); }
\}                                 { if(!COMMENT) printf("\nBLOCK ENDS"); }

{identifier}(\[[0-9]*\])?          { if(!COMMENT) printf("\n%s IDENTIFIER", yytext); }

\".*\"                             { if(!COMMENT) printf("\n\t%s is a STRING", yytext); }

[0-9]+                             { if(!COMMENT) printf("\n%s is a NUMBER", yytext); }

\)(\:)?                            { if(!COMMENT) { printf("\n\t"); ECHO; printf("\n"); } }
\(                                  ECHO;

=                                   { if(!COMMENT) printf("\n\t%s is an ASSIGNMENT OPERATOR", yytext); }

\<=|\>=|<|==|>                     { if(!COMMENT) printf("\n\t%s is a RELATIONAL OPERATOR", yytext); }

.                                   ;   /* Ignore other characters */

%%

int main(int argc, char **argv)
{
    FILE *file;
    file = fopen("var.c", "r");
    if (!file) {
        printf("Could not open the file\n");
        exit(0);
    }
    yyin = file;
    yylex();
    printf("\n");
    return 0;
}

int yywrap()
{
    return 1;
}
